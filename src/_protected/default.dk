#include "dkli.dkh"
#!
program
{
	#include "config.dkl"
	#include "dbr.dkh"
	// Esta secci칩n de c칩digo debe mejorarse, la manera como se est치 obteniendo el correo del usuario no es la mejor
	// ************************************************************************

	current_url::hst
	{
		host=@@(@http_context,"request/headers/HTTP_HOST")
		protocol=ifstr(parse.bool(@@(@http_context,"request/headers/HTTPS")),"https","http")
		path=replace(field.dstr(@http_context,"request/headers/request_uri","/"),"\\","/")
		if hst{return protocol+"://"+path.concat(host,"/"+ifstr(@@(@http_context,"request/get/ws")!="",@@(@http_context,"request/get/ws")+"/",""))}
		path=list.str(split(path,"?"),0)

		return protocol+"://"+path.concat(host,path)
	}
   
    load_script::
    {
    	scrips=""
    	files="style.css"
    	ref files_scrips=split(files,",")
    	for i=0;i<list.count(files_scrips)
    	{
    		script=list.str(files_scrips,i)
    		ext=file.extension(script)

    		switch ext
    		{
    			case ".css"{scrips=scrips+ftext('<link href="/_css/#<script>" rel="stylesheet"/>')}
    			case ".js"{scrips=scrips+ftext('<script type="text/javascript" src="/_js/#<script>" ></script>')}
    		}
    		
    	}
    	return scrips

    }
   
	#!
	html_toc:: content
	{
		
		html='<div class="div-first">
			#<printNav_Bar()>
			#<content>
			</div>'//container-fluid
		
		return ftext(html)
	}
	get_address::&objs
	{
		html=""
		for i=0;i<@count(objs)
        {
            ref obj = list.obj(objs,i)
            html=ftext(html+'<span class="nav_span">></span>
             <a class="nav_a" title="#<@@(obj,"type")>" href="#<@@(obj,"target")>">#<@@(obj,"link")></a>')
        }
        return ftext(html)
	}
	printNav_Bar::
	{
		last_path=@@(@http_context,"last_path")
		isadmin=@@(@http_context,"#session/get_permission")
		isleader=@@(@http_context,"#session/get_permission_leader")
		setting=""
		if field.exist(@http_context,"last_path") && last_path!="" && (isadmin || isleader){
			setting=ftext('<a title="Ajustes" id="" href="/#<last_path>" style="color: #0d6efd;text-decoration:none;">
		                    <img height="25"; src="#<@icon_setting>"/>
		                </a>')
		}
		url_origin=ifstr(@@(@http_context,"request/get/ws")!="",@url_workspace,"/")
		return ftext('<nav class="navbar_path fixed-top " style="z-index:100000000000">
			<a class="nav_a" title="home" href="#<url_origin>"> <img src="#<@icon_home>"></a>
			'+get_address(@@(@http_context,"&session/address_workspaces"))+'
	        <div id="a_logout">
	        	#<@@(@http_context,"session/user/name")>
	        	#<setting>
	            <a style="color:black;font-size: 20px;" title="Cerrar sesi칩n" href="https://api.induxsoft.net/auth/logout/?ids=#<@@(@http_context,"session/user/ids")>&url=#<url_encode(@url_workspace)>" id="a_logout1">
	                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-box-arrow-right" viewBox="0 0 16 16">
					  <path fill-rule="evenodd" d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z"/>
					  <path fill-rule="evenodd" d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z"/>
					</svg>
	            </a>
	        </div></nav><br>
	        <style>
			
			.navbar_path{
			    display: flex;
			    align-items: center;
			    flex-wrap: wrap;
			    padding: 0 1rem 0 2rem;
			    background-color: #eee;
			    outline: 1px solid #ddd;
			}
			.nav_a{
			    text-decoration: none;
			    color: var(--medium-gray-color);
			}
			.nav_a:hover{
			    color: #000;
			}
			.nav_a img{
			    height: 1.5rem;
			}
			#btn-logout
			{
			    color: #555;
			}
			#a_logout
			{
			    flex-grow: 1;
			    text-align: right;
			    display:flex;
			    justify-content:end;
			    align-items:center;
			    gap:2px;
			}
			
			.nav_span{
			    color: #ccc;
			    font-weight: 800;
			    margin: 0 .5rem;
			}

			
		</style>

	        ')
	}
	
    @http_context<"response/headers/Content-Type">:"text/html;charset=utf-8"
	@http_context<"response/text">:html_toc(@@(@http_context,"response/text"))
    @http_context<"response/text">:ftext(file.rtext(@template))

	exception
	{
		##
		div{$"#<last_error()>"}
		##
	}
}